#pragma once

/*
* Adapted from the reference code implementation
*   Copyright 2017 Dustin J Sparks
*   Using CC0 1.0 license, this code is released under the same.
* ===========================================================================
* Argon2 reference source code package - reference C implementations
*
* Copyright 2015
* Daniel Dinu, Dmitry Khovratovich, Jean-Philippe Aumasson, and Samuel Neves
*
* You may use this work under the terms of a Creative Commons CC0 1.0
* License/Waiver or the Apache Public License 2.0, at your option. The terms of
* these licenses can be found at:
*
* - CC0 1.0 Universal : http://creativecommons.org/publicdomain/zero/1.0
* - Apache 2.0        : http://www.apache.org/licenses/LICENSE-2.0
*
* You should have received a copy of both of these licenses along with this
* software. If not, they may be obtained at the above URLs.
* ============================================================================
* Originally Written in 2012 by Christian Winnerlein  <codesinchaos@gmail.com>
* Rewritten Fall 2014 (for the Blake2s flavor instead of the Blake2b flavor) 
*   by Dustin Sparks <sparkdustjoe@gmail.com>
*
* To the extent possible under law, the author(s) have dedicated all copyright
* and related and neighboring rights to this software to the public domain
* worldwide. This software is distributed without any warranty.
*
* You should have received a copy of the CC0 Public Domain Dedication along with
* this software. If not, see <http://creativecommons.org/publicdomain/zero/1.0/>.
*
* Based on BlakeSharp
* by Dominik Reichl <dominik.reichl@t-online.de>
* Web: http://www.dominik-reichl.de/
* If you're using this class, it would be nice if you'd mention
* me somewhere in the documentation of your program, but it's
* not required.

* BLAKE was designed by Jean-Philippe Aumasson, Luca Henzen,
* Willi Meier and Raphael C.-W. Phan.
* BlakeSharp was derived from the reference C implementation.
*/

using namespace System;

namespace Argon2Managed
{
	void Blake2s::blake2s_compress(Blake2sState^ S, array<const Byte>^ block, int start)
	{
		Buffer::BlockCopy(block, start, S->M, 0, BLAKE2S_BLOCKBYTES);

		UInt32 m0 = S->M[0];
		UInt32 m1 = S->M[1];
		UInt32 m2 = S->M[2];
		UInt32 m3 = S->M[3];
		UInt32 m4 = S->M[4];
		UInt32 m5 = S->M[5];
		UInt32 m6 = S->M[6];
		UInt32 m7 = S->M[7];
		UInt32 m8 = S->M[8];
		UInt32 m9 = S->M[9];
		UInt32 m10 = S->M[10];
		UInt32 m11 = S->M[11];
		UInt32 m12 = S->M[12];
		UInt32 m13 = S->M[13];
		UInt32 m14 = S->M[14];
		UInt32 m15 = S->M[15];

		UInt32 v0 = S->H[0];
		UInt32 v1 = S->H[1];
		UInt32 v2 = S->H[2];
		UInt32 v3 = S->H[3];
		UInt32 v4 = S->H[4];
		UInt32 v5 = S->H[5];
		UInt32 v6 = S->H[6];
		UInt32 v7 = S->H[7];

		UInt32 v8 = IV0S;
		UInt32 v9 = IV1S;
		UInt32 v10 = IV2S;
		UInt32 v11 = IV3S;
		UInt32 v12 = IV4S ^ S->T[0];
		UInt32 v13 = IV5S ^ S->T[1];
		UInt32 v14 = IV6S ^ S->F[0];
		UInt32 v15 = IV7S ^ S->F[1];

		// Rounds
		//*
		// Round 1.
		v0 += m0;
		v0 += v4;
		v12 ^= v0;
		v12 = v12 << (32 - 16) | v12 >> 16;
		v8 += v12;
		v4 ^= v8;
		v4 = v4 << (32 - 12) | v4 >> 12;
		v1 += m2;
		v1 += v5;
		v13 ^= v1;
		v13 = v13 << (32 - 16) | v13 >> 16;
		v9 += v13;
		v5 ^= v9;
		v5 = v5 << (32 - 12) | v5 >> 12;
		v2 += m4;
		v2 += v6;
		v14 ^= v2;
		v14 = v14 << (32 - 16) | v14 >> 16;
		v10 += v14;
		v6 ^= v10;
		v6 = v6 << (32 - 12) | v6 >> 12;
		v3 += m6;
		v3 += v7;
		v15 ^= v3;
		v15 = v15 << (32 - 16) | v15 >> 16;
		v11 += v15;
		v7 ^= v11;
		v7 = v7 << (32 - 12) | v7 >> 12;
		v2 += m5;
		v2 += v6;
		v14 ^= v2;
		v14 = v14 << (32 - 8) | v14 >> 8;
		v10 += v14;
		v6 ^= v10;
		v6 = v6 << (32 - 7) | v6 >> 7;
		v3 += m7;
		v3 += v7;
		v15 ^= v3;
		v15 = v15 << (32 - 8) | v15 >> 8;
		v11 += v15;
		v7 ^= v11;
		v7 = v7 << (32 - 7) | v7 >> 7;
		v1 += m3;
		v1 += v5;
		v13 ^= v1;
		v13 = v13 << (32 - 8) | v13 >> 8;
		v9 += v13;
		v5 ^= v9;
		v5 = v5 << (32 - 7) | v5 >> 7;
		v0 += m1;
		v0 += v4;
		v12 ^= v0;
		v12 = v12 << (32 - 8) | v12 >> 8;
		v8 += v12;
		v4 ^= v8;
		v4 = v4 << (32 - 7) | v4 >> 7;
		v0 += m8;
		v0 += v5;
		v15 ^= v0;
		v15 = v15 << (32 - 16) | v15 >> 16;
		v10 += v15;
		v5 ^= v10;
		v5 = v5 << (32 - 12) | v5 >> 12;
		v1 += m10;
		v1 += v6;
		v12 ^= v1;
		v12 = v12 << (32 - 16) | v12 >> 16;
		v11 += v12;
		v6 ^= v11;
		v6 = v6 << (32 - 12) | v6 >> 12;
		v2 += m12;
		v2 += v7;
		v13 ^= v2;
		v13 = v13 << (32 - 16) | v13 >> 16;
		v8 += v13;
		v7 ^= v8;
		v7 = v7 << (32 - 12) | v7 >> 12;
		v3 += m14;
		v3 += v4;
		v14 ^= v3;
		v14 = v14 << (32 - 16) | v14 >> 16;
		v9 += v14;
		v4 ^= v9;
		v4 = v4 << (32 - 12) | v4 >> 12;
		v2 += m13;
		v2 += v7;
		v13 ^= v2;
		v13 = v13 << (32 - 8) | v13 >> 8;
		v8 += v13;
		v7 ^= v8;
		v7 = v7 << (32 - 7) | v7 >> 7;
		v3 += m15;
		v3 += v4;
		v14 ^= v3;
		v14 = v14 << (32 - 8) | v14 >> 8;
		v9 += v14;
		v4 ^= v9;
		v4 = v4 << (32 - 7) | v4 >> 7;
		v1 += m11;
		v1 += v6;
		v12 ^= v1;
		v12 = v12 << (32 - 8) | v12 >> 8;
		v11 += v12;
		v6 ^= v11;
		v6 = v6 << (32 - 7) | v6 >> 7;
		v0 += m9;
		v0 += v5;
		v15 ^= v0;
		v15 = v15 << (32 - 8) | v15 >> 8;
		v10 += v15;
		v5 ^= v10;
		v5 = v5 << (32 - 7) | v5 >> 7;

		// Round 2.
		v0 += m14;
		v0 += v4;
		v12 ^= v0;
		v12 = v12 << (32 - 16) | v12 >> 16;
		v8 += v12;
		v4 ^= v8;
		v4 = v4 << (32 - 12) | v4 >> 12;
		v1 += m4;
		v1 += v5;
		v13 ^= v1;
		v13 = v13 << (32 - 16) | v13 >> 16;
		v9 += v13;
		v5 ^= v9;
		v5 = v5 << (32 - 12) | v5 >> 12;
		v2 += m9;
		v2 += v6;
		v14 ^= v2;
		v14 = v14 << (32 - 16) | v14 >> 16;
		v10 += v14;
		v6 ^= v10;
		v6 = v6 << (32 - 12) | v6 >> 12;
		v3 += m13;
		v3 += v7;
		v15 ^= v3;
		v15 = v15 << (32 - 16) | v15 >> 16;
		v11 += v15;
		v7 ^= v11;
		v7 = v7 << (32 - 12) | v7 >> 12;
		v2 += m15;
		v2 += v6;
		v14 ^= v2;
		v14 = v14 << (32 - 8) | v14 >> 8;
		v10 += v14;
		v6 ^= v10;
		v6 = v6 << (32 - 7) | v6 >> 7;
		v3 += m6;
		v3 += v7;
		v15 ^= v3;
		v15 = v15 << (32 - 8) | v15 >> 8;
		v11 += v15;
		v7 ^= v11;
		v7 = v7 << (32 - 7) | v7 >> 7;
		v1 += m8;
		v1 += v5;
		v13 ^= v1;
		v13 = v13 << (32 - 8) | v13 >> 8;
		v9 += v13;
		v5 ^= v9;
		v5 = v5 << (32 - 7) | v5 >> 7;
		v0 += m10;
		v0 += v4;
		v12 ^= v0;
		v12 = v12 << (32 - 8) | v12 >> 8;
		v8 += v12;
		v4 ^= v8;
		v4 = v4 << (32 - 7) | v4 >> 7;
		v0 += m1;
		v0 += v5;
		v15 ^= v0;
		v15 = v15 << (32 - 16) | v15 >> 16;
		v10 += v15;
		v5 ^= v10;
		v5 = v5 << (32 - 12) | v5 >> 12;
		v1 += m0;
		v1 += v6;
		v12 ^= v1;
		v12 = v12 << (32 - 16) | v12 >> 16;
		v11 += v12;
		v6 ^= v11;
		v6 = v6 << (32 - 12) | v6 >> 12;
		v2 += m11;
		v2 += v7;
		v13 ^= v2;
		v13 = v13 << (32 - 16) | v13 >> 16;
		v8 += v13;
		v7 ^= v8;
		v7 = v7 << (32 - 12) | v7 >> 12;
		v3 += m5;
		v3 += v4;
		v14 ^= v3;
		v14 = v14 << (32 - 16) | v14 >> 16;
		v9 += v14;
		v4 ^= v9;
		v4 = v4 << (32 - 12) | v4 >> 12;
		v2 += m7;
		v2 += v7;
		v13 ^= v2;
		v13 = v13 << (32 - 8) | v13 >> 8;
		v8 += v13;
		v7 ^= v8;
		v7 = v7 << (32 - 7) | v7 >> 7;
		v3 += m3;
		v3 += v4;
		v14 ^= v3;
		v14 = v14 << (32 - 8) | v14 >> 8;
		v9 += v14;
		v4 ^= v9;
		v4 = v4 << (32 - 7) | v4 >> 7;
		v1 += m2;
		v1 += v6;
		v12 ^= v1;
		v12 = v12 << (32 - 8) | v12 >> 8;
		v11 += v12;
		v6 ^= v11;
		v6 = v6 << (32 - 7) | v6 >> 7;
		v0 += m12;
		v0 += v5;
		v15 ^= v0;
		v15 = v15 << (32 - 8) | v15 >> 8;
		v10 += v15;
		v5 ^= v10;
		v5 = v5 << (32 - 7) | v5 >> 7;

		// Round 3.
		v0 += m11;
		v0 += v4;
		v12 ^= v0;
		v12 = v12 << (32 - 16) | v12 >> 16;
		v8 += v12;
		v4 ^= v8;
		v4 = v4 << (32 - 12) | v4 >> 12;
		v1 += m12;
		v1 += v5;
		v13 ^= v1;
		v13 = v13 << (32 - 16) | v13 >> 16;
		v9 += v13;
		v5 ^= v9;
		v5 = v5 << (32 - 12) | v5 >> 12;
		v2 += m5;
		v2 += v6;
		v14 ^= v2;
		v14 = v14 << (32 - 16) | v14 >> 16;
		v10 += v14;
		v6 ^= v10;
		v6 = v6 << (32 - 12) | v6 >> 12;
		v3 += m15;
		v3 += v7;
		v15 ^= v3;
		v15 = v15 << (32 - 16) | v15 >> 16;
		v11 += v15;
		v7 ^= v11;
		v7 = v7 << (32 - 12) | v7 >> 12;
		v2 += m2;
		v2 += v6;
		v14 ^= v2;
		v14 = v14 << (32 - 8) | v14 >> 8;
		v10 += v14;
		v6 ^= v10;
		v6 = v6 << (32 - 7) | v6 >> 7;
		v3 += m13;
		v3 += v7;
		v15 ^= v3;
		v15 = v15 << (32 - 8) | v15 >> 8;
		v11 += v15;
		v7 ^= v11;
		v7 = v7 << (32 - 7) | v7 >> 7;
		v1 += m0;
		v1 += v5;
		v13 ^= v1;
		v13 = v13 << (32 - 8) | v13 >> 8;
		v9 += v13;
		v5 ^= v9;
		v5 = v5 << (32 - 7) | v5 >> 7;
		v0 += m8;
		v0 += v4;
		v12 ^= v0;
		v12 = v12 << (32 - 8) | v12 >> 8;
		v8 += v12;
		v4 ^= v8;
		v4 = v4 << (32 - 7) | v4 >> 7;
		v0 += m10;
		v0 += v5;
		v15 ^= v0;
		v15 = v15 << (32 - 16) | v15 >> 16;
		v10 += v15;
		v5 ^= v10;
		v5 = v5 << (32 - 12) | v5 >> 12;
		v1 += m3;
		v1 += v6;
		v12 ^= v1;
		v12 = v12 << (32 - 16) | v12 >> 16;
		v11 += v12;
		v6 ^= v11;
		v6 = v6 << (32 - 12) | v6 >> 12;
		v2 += m7;
		v2 += v7;
		v13 ^= v2;
		v13 = v13 << (32 - 16) | v13 >> 16;
		v8 += v13;
		v7 ^= v8;
		v7 = v7 << (32 - 12) | v7 >> 12;
		v3 += m9;
		v3 += v4;
		v14 ^= v3;
		v14 = v14 << (32 - 16) | v14 >> 16;
		v9 += v14;
		v4 ^= v9;
		v4 = v4 << (32 - 12) | v4 >> 12;
		v2 += m1;
		v2 += v7;
		v13 ^= v2;
		v13 = v13 << (32 - 8) | v13 >> 8;
		v8 += v13;
		v7 ^= v8;
		v7 = v7 << (32 - 7) | v7 >> 7;
		v3 += m4;
		v3 += v4;
		v14 ^= v3;
		v14 = v14 << (32 - 8) | v14 >> 8;
		v9 += v14;
		v4 ^= v9;
		v4 = v4 << (32 - 7) | v4 >> 7;
		v1 += m6;
		v1 += v6;
		v12 ^= v1;
		v12 = v12 << (32 - 8) | v12 >> 8;
		v11 += v12;
		v6 ^= v11;
		v6 = v6 << (32 - 7) | v6 >> 7;
		v0 += m14;
		v0 += v5;
		v15 ^= v0;
		v15 = v15 << (32 - 8) | v15 >> 8;
		v10 += v15;
		v5 ^= v10;
		v5 = v5 << (32 - 7) | v5 >> 7;

		// Round 4.
		v0 += m7;
		v0 += v4;
		v12 ^= v0;
		v12 = v12 << (32 - 16) | v12 >> 16;
		v8 += v12;
		v4 ^= v8;
		v4 = v4 << (32 - 12) | v4 >> 12;
		v1 += m3;
		v1 += v5;
		v13 ^= v1;
		v13 = v13 << (32 - 16) | v13 >> 16;
		v9 += v13;
		v5 ^= v9;
		v5 = v5 << (32 - 12) | v5 >> 12;
		v2 += m13;
		v2 += v6;
		v14 ^= v2;
		v14 = v14 << (32 - 16) | v14 >> 16;
		v10 += v14;
		v6 ^= v10;
		v6 = v6 << (32 - 12) | v6 >> 12;
		v3 += m11;
		v3 += v7;
		v15 ^= v3;
		v15 = v15 << (32 - 16) | v15 >> 16;
		v11 += v15;
		v7 ^= v11;
		v7 = v7 << (32 - 12) | v7 >> 12;
		v2 += m12;
		v2 += v6;
		v14 ^= v2;
		v14 = v14 << (32 - 8) | v14 >> 8;
		v10 += v14;
		v6 ^= v10;
		v6 = v6 << (32 - 7) | v6 >> 7;
		v3 += m14;
		v3 += v7;
		v15 ^= v3;
		v15 = v15 << (32 - 8) | v15 >> 8;
		v11 += v15;
		v7 ^= v11;
		v7 = v7 << (32 - 7) | v7 >> 7;
		v1 += m1;
		v1 += v5;
		v13 ^= v1;
		v13 = v13 << (32 - 8) | v13 >> 8;
		v9 += v13;
		v5 ^= v9;
		v5 = v5 << (32 - 7) | v5 >> 7;
		v0 += m9;
		v0 += v4;
		v12 ^= v0;
		v12 = v12 << (32 - 8) | v12 >> 8;
		v8 += v12;
		v4 ^= v8;
		v4 = v4 << (32 - 7) | v4 >> 7;
		v0 += m2;
		v0 += v5;
		v15 ^= v0;
		v15 = v15 << (32 - 16) | v15 >> 16;
		v10 += v15;
		v5 ^= v10;
		v5 = v5 << (32 - 12) | v5 >> 12;
		v1 += m5;
		v1 += v6;
		v12 ^= v1;
		v12 = v12 << (32 - 16) | v12 >> 16;
		v11 += v12;
		v6 ^= v11;
		v6 = v6 << (32 - 12) | v6 >> 12;
		v2 += m4;
		v2 += v7;
		v13 ^= v2;
		v13 = v13 << (32 - 16) | v13 >> 16;
		v8 += v13;
		v7 ^= v8;
		v7 = v7 << (32 - 12) | v7 >> 12;
		v3 += m15;
		v3 += v4;
		v14 ^= v3;
		v14 = v14 << (32 - 16) | v14 >> 16;
		v9 += v14;
		v4 ^= v9;
		v4 = v4 << (32 - 12) | v4 >> 12;
		v2 += m0;
		v2 += v7;
		v13 ^= v2;
		v13 = v13 << (32 - 8) | v13 >> 8;
		v8 += v13;
		v7 ^= v8;
		v7 = v7 << (32 - 7) | v7 >> 7;
		v3 += m8;
		v3 += v4;
		v14 ^= v3;
		v14 = v14 << (32 - 8) | v14 >> 8;
		v9 += v14;
		v4 ^= v9;
		v4 = v4 << (32 - 7) | v4 >> 7;
		v1 += m10;
		v1 += v6;
		v12 ^= v1;
		v12 = v12 << (32 - 8) | v12 >> 8;
		v11 += v12;
		v6 ^= v11;
		v6 = v6 << (32 - 7) | v6 >> 7;
		v0 += m6;
		v0 += v5;
		v15 ^= v0;
		v15 = v15 << (32 - 8) | v15 >> 8;
		v10 += v15;
		v5 ^= v10;
		v5 = v5 << (32 - 7) | v5 >> 7;

		// Round 5.
		v0 += m9;
		v0 += v4;
		v12 ^= v0;
		v12 = v12 << (32 - 16) | v12 >> 16;
		v8 += v12;
		v4 ^= v8;
		v4 = v4 << (32 - 12) | v4 >> 12;
		v1 += m5;
		v1 += v5;
		v13 ^= v1;
		v13 = v13 << (32 - 16) | v13 >> 16;
		v9 += v13;
		v5 ^= v9;
		v5 = v5 << (32 - 12) | v5 >> 12;
		v2 += m2;
		v2 += v6;
		v14 ^= v2;
		v14 = v14 << (32 - 16) | v14 >> 16;
		v10 += v14;
		v6 ^= v10;
		v6 = v6 << (32 - 12) | v6 >> 12;
		v3 += m10;
		v3 += v7;
		v15 ^= v3;
		v15 = v15 << (32 - 16) | v15 >> 16;
		v11 += v15;
		v7 ^= v11;
		v7 = v7 << (32 - 12) | v7 >> 12;
		v2 += m4;
		v2 += v6;
		v14 ^= v2;
		v14 = v14 << (32 - 8) | v14 >> 8;
		v10 += v14;
		v6 ^= v10;
		v6 = v6 << (32 - 7) | v6 >> 7;
		v3 += m15;
		v3 += v7;
		v15 ^= v3;
		v15 = v15 << (32 - 8) | v15 >> 8;
		v11 += v15;
		v7 ^= v11;
		v7 = v7 << (32 - 7) | v7 >> 7;
		v1 += m7;
		v1 += v5;
		v13 ^= v1;
		v13 = v13 << (32 - 8) | v13 >> 8;
		v9 += v13;
		v5 ^= v9;
		v5 = v5 << (32 - 7) | v5 >> 7;
		v0 += m0;
		v0 += v4;
		v12 ^= v0;
		v12 = v12 << (32 - 8) | v12 >> 8;
		v8 += v12;
		v4 ^= v8;
		v4 = v4 << (32 - 7) | v4 >> 7;
		v0 += m14;
		v0 += v5;
		v15 ^= v0;
		v15 = v15 << (32 - 16) | v15 >> 16;
		v10 += v15;
		v5 ^= v10;
		v5 = v5 << (32 - 12) | v5 >> 12;
		v1 += m11;
		v1 += v6;
		v12 ^= v1;
		v12 = v12 << (32 - 16) | v12 >> 16;
		v11 += v12;
		v6 ^= v11;
		v6 = v6 << (32 - 12) | v6 >> 12;
		v2 += m6;
		v2 += v7;
		v13 ^= v2;
		v13 = v13 << (32 - 16) | v13 >> 16;
		v8 += v13;
		v7 ^= v8;
		v7 = v7 << (32 - 12) | v7 >> 12;
		v3 += m3;
		v3 += v4;
		v14 ^= v3;
		v14 = v14 << (32 - 16) | v14 >> 16;
		v9 += v14;
		v4 ^= v9;
		v4 = v4 << (32 - 12) | v4 >> 12;
		v2 += m8;
		v2 += v7;
		v13 ^= v2;
		v13 = v13 << (32 - 8) | v13 >> 8;
		v8 += v13;
		v7 ^= v8;
		v7 = v7 << (32 - 7) | v7 >> 7;
		v3 += m13;
		v3 += v4;
		v14 ^= v3;
		v14 = v14 << (32 - 8) | v14 >> 8;
		v9 += v14;
		v4 ^= v9;
		v4 = v4 << (32 - 7) | v4 >> 7;
		v1 += m12;
		v1 += v6;
		v12 ^= v1;
		v12 = v12 << (32 - 8) | v12 >> 8;
		v11 += v12;
		v6 ^= v11;
		v6 = v6 << (32 - 7) | v6 >> 7;
		v0 += m1;
		v0 += v5;
		v15 ^= v0;
		v15 = v15 << (32 - 8) | v15 >> 8;
		v10 += v15;
		v5 ^= v10;
		v5 = v5 << (32 - 7) | v5 >> 7;

		// Round 6.
		v0 += m2;
		v0 += v4;
		v12 ^= v0;
		v12 = v12 << (32 - 16) | v12 >> 16;
		v8 += v12;
		v4 ^= v8;
		v4 = v4 << (32 - 12) | v4 >> 12;
		v1 += m6;
		v1 += v5;
		v13 ^= v1;
		v13 = v13 << (32 - 16) | v13 >> 16;
		v9 += v13;
		v5 ^= v9;
		v5 = v5 << (32 - 12) | v5 >> 12;
		v2 += m0;
		v2 += v6;
		v14 ^= v2;
		v14 = v14 << (32 - 16) | v14 >> 16;
		v10 += v14;
		v6 ^= v10;
		v6 = v6 << (32 - 12) | v6 >> 12;
		v3 += m8;
		v3 += v7;
		v15 ^= v3;
		v15 = v15 << (32 - 16) | v15 >> 16;
		v11 += v15;
		v7 ^= v11;
		v7 = v7 << (32 - 12) | v7 >> 12;
		v2 += m11;
		v2 += v6;
		v14 ^= v2;
		v14 = v14 << (32 - 8) | v14 >> 8;
		v10 += v14;
		v6 ^= v10;
		v6 = v6 << (32 - 7) | v6 >> 7;
		v3 += m3;
		v3 += v7;
		v15 ^= v3;
		v15 = v15 << (32 - 8) | v15 >> 8;
		v11 += v15;
		v7 ^= v11;
		v7 = v7 << (32 - 7) | v7 >> 7;
		v1 += m10;
		v1 += v5;
		v13 ^= v1;
		v13 = v13 << (32 - 8) | v13 >> 8;
		v9 += v13;
		v5 ^= v9;
		v5 = v5 << (32 - 7) | v5 >> 7;
		v0 += m12;
		v0 += v4;
		v12 ^= v0;
		v12 = v12 << (32 - 8) | v12 >> 8;
		v8 += v12;
		v4 ^= v8;
		v4 = v4 << (32 - 7) | v4 >> 7;
		v0 += m4;
		v0 += v5;
		v15 ^= v0;
		v15 = v15 << (32 - 16) | v15 >> 16;
		v10 += v15;
		v5 ^= v10;
		v5 = v5 << (32 - 12) | v5 >> 12;
		v1 += m7;
		v1 += v6;
		v12 ^= v1;
		v12 = v12 << (32 - 16) | v12 >> 16;
		v11 += v12;
		v6 ^= v11;
		v6 = v6 << (32 - 12) | v6 >> 12;
		v2 += m15;
		v2 += v7;
		v13 ^= v2;
		v13 = v13 << (32 - 16) | v13 >> 16;
		v8 += v13;
		v7 ^= v8;
		v7 = v7 << (32 - 12) | v7 >> 12;
		v3 += m1;
		v3 += v4;
		v14 ^= v3;
		v14 = v14 << (32 - 16) | v14 >> 16;
		v9 += v14;
		v4 ^= v9;
		v4 = v4 << (32 - 12) | v4 >> 12;
		v2 += m14;
		v2 += v7;
		v13 ^= v2;
		v13 = v13 << (32 - 8) | v13 >> 8;
		v8 += v13;
		v7 ^= v8;
		v7 = v7 << (32 - 7) | v7 >> 7;
		v3 += m9;
		v3 += v4;
		v14 ^= v3;
		v14 = v14 << (32 - 8) | v14 >> 8;
		v9 += v14;
		v4 ^= v9;
		v4 = v4 << (32 - 7) | v4 >> 7;
		v1 += m5;
		v1 += v6;
		v12 ^= v1;
		v12 = v12 << (32 - 8) | v12 >> 8;
		v11 += v12;
		v6 ^= v11;
		v6 = v6 << (32 - 7) | v6 >> 7;
		v0 += m13;
		v0 += v5;
		v15 ^= v0;
		v15 = v15 << (32 - 8) | v15 >> 8;
		v10 += v15;
		v5 ^= v10;
		v5 = v5 << (32 - 7) | v5 >> 7;

		// Round 7.
		v0 += m12;
		v0 += v4;
		v12 ^= v0;
		v12 = v12 << (32 - 16) | v12 >> 16;
		v8 += v12;
		v4 ^= v8;
		v4 = v4 << (32 - 12) | v4 >> 12;
		v1 += m1;
		v1 += v5;
		v13 ^= v1;
		v13 = v13 << (32 - 16) | v13 >> 16;
		v9 += v13;
		v5 ^= v9;
		v5 = v5 << (32 - 12) | v5 >> 12;
		v2 += m14;
		v2 += v6;
		v14 ^= v2;
		v14 = v14 << (32 - 16) | v14 >> 16;
		v10 += v14;
		v6 ^= v10;
		v6 = v6 << (32 - 12) | v6 >> 12;
		v3 += m4;
		v3 += v7;
		v15 ^= v3;
		v15 = v15 << (32 - 16) | v15 >> 16;
		v11 += v15;
		v7 ^= v11;
		v7 = v7 << (32 - 12) | v7 >> 12;
		v2 += m13;
		v2 += v6;
		v14 ^= v2;
		v14 = v14 << (32 - 8) | v14 >> 8;
		v10 += v14;
		v6 ^= v10;
		v6 = v6 << (32 - 7) | v6 >> 7;
		v3 += m10;
		v3 += v7;
		v15 ^= v3;
		v15 = v15 << (32 - 8) | v15 >> 8;
		v11 += v15;
		v7 ^= v11;
		v7 = v7 << (32 - 7) | v7 >> 7;
		v1 += m15;
		v1 += v5;
		v13 ^= v1;
		v13 = v13 << (32 - 8) | v13 >> 8;
		v9 += v13;
		v5 ^= v9;
		v5 = v5 << (32 - 7) | v5 >> 7;
		v0 += m5;
		v0 += v4;
		v12 ^= v0;
		v12 = v12 << (32 - 8) | v12 >> 8;
		v8 += v12;
		v4 ^= v8;
		v4 = v4 << (32 - 7) | v4 >> 7;
		v0 += m0;
		v0 += v5;
		v15 ^= v0;
		v15 = v15 << (32 - 16) | v15 >> 16;
		v10 += v15;
		v5 ^= v10;
		v5 = v5 << (32 - 12) | v5 >> 12;
		v1 += m6;
		v1 += v6;
		v12 ^= v1;
		v12 = v12 << (32 - 16) | v12 >> 16;
		v11 += v12;
		v6 ^= v11;
		v6 = v6 << (32 - 12) | v6 >> 12;
		v2 += m9;
		v2 += v7;
		v13 ^= v2;
		v13 = v13 << (32 - 16) | v13 >> 16;
		v8 += v13;
		v7 ^= v8;
		v7 = v7 << (32 - 12) | v7 >> 12;
		v3 += m8;
		v3 += v4;
		v14 ^= v3;
		v14 = v14 << (32 - 16) | v14 >> 16;
		v9 += v14;
		v4 ^= v9;
		v4 = v4 << (32 - 12) | v4 >> 12;
		v2 += m2;
		v2 += v7;
		v13 ^= v2;
		v13 = v13 << (32 - 8) | v13 >> 8;
		v8 += v13;
		v7 ^= v8;
		v7 = v7 << (32 - 7) | v7 >> 7;
		v3 += m11;
		v3 += v4;
		v14 ^= v3;
		v14 = v14 << (32 - 8) | v14 >> 8;
		v9 += v14;
		v4 ^= v9;
		v4 = v4 << (32 - 7) | v4 >> 7;
		v1 += m3;
		v1 += v6;
		v12 ^= v1;
		v12 = v12 << (32 - 8) | v12 >> 8;
		v11 += v12;
		v6 ^= v11;
		v6 = v6 << (32 - 7) | v6 >> 7;
		v0 += m7;
		v0 += v5;
		v15 ^= v0;
		v15 = v15 << (32 - 8) | v15 >> 8;
		v10 += v15;
		v5 ^= v10;
		v5 = v5 << (32 - 7) | v5 >> 7;

		// Round 8.
		v0 += m13;
		v0 += v4;
		v12 ^= v0;
		v12 = v12 << (32 - 16) | v12 >> 16;
		v8 += v12;
		v4 ^= v8;
		v4 = v4 << (32 - 12) | v4 >> 12;
		v1 += m7;
		v1 += v5;
		v13 ^= v1;
		v13 = v13 << (32 - 16) | v13 >> 16;
		v9 += v13;
		v5 ^= v9;
		v5 = v5 << (32 - 12) | v5 >> 12;
		v2 += m12;
		v2 += v6;
		v14 ^= v2;
		v14 = v14 << (32 - 16) | v14 >> 16;
		v10 += v14;
		v6 ^= v10;
		v6 = v6 << (32 - 12) | v6 >> 12;
		v3 += m3;
		v3 += v7;
		v15 ^= v3;
		v15 = v15 << (32 - 16) | v15 >> 16;
		v11 += v15;
		v7 ^= v11;
		v7 = v7 << (32 - 12) | v7 >> 12;
		v2 += m1;
		v2 += v6;
		v14 ^= v2;
		v14 = v14 << (32 - 8) | v14 >> 8;
		v10 += v14;
		v6 ^= v10;
		v6 = v6 << (32 - 7) | v6 >> 7;
		v3 += m9;
		v3 += v7;
		v15 ^= v3;
		v15 = v15 << (32 - 8) | v15 >> 8;
		v11 += v15;
		v7 ^= v11;
		v7 = v7 << (32 - 7) | v7 >> 7;
		v1 += m14;
		v1 += v5;
		v13 ^= v1;
		v13 = v13 << (32 - 8) | v13 >> 8;
		v9 += v13;
		v5 ^= v9;
		v5 = v5 << (32 - 7) | v5 >> 7;
		v0 += m11;
		v0 += v4;
		v12 ^= v0;
		v12 = v12 << (32 - 8) | v12 >> 8;
		v8 += v12;
		v4 ^= v8;
		v4 = v4 << (32 - 7) | v4 >> 7;
		v0 += m5;
		v0 += v5;
		v15 ^= v0;
		v15 = v15 << (32 - 16) | v15 >> 16;
		v10 += v15;
		v5 ^= v10;
		v5 = v5 << (32 - 12) | v5 >> 12;
		v1 += m15;
		v1 += v6;
		v12 ^= v1;
		v12 = v12 << (32 - 16) | v12 >> 16;
		v11 += v12;
		v6 ^= v11;
		v6 = v6 << (32 - 12) | v6 >> 12;
		v2 += m8;
		v2 += v7;
		v13 ^= v2;
		v13 = v13 << (32 - 16) | v13 >> 16;
		v8 += v13;
		v7 ^= v8;
		v7 = v7 << (32 - 12) | v7 >> 12;
		v3 += m2;
		v3 += v4;
		v14 ^= v3;
		v14 = v14 << (32 - 16) | v14 >> 16;
		v9 += v14;
		v4 ^= v9;
		v4 = v4 << (32 - 12) | v4 >> 12;
		v2 += m6;
		v2 += v7;
		v13 ^= v2;
		v13 = v13 << (32 - 8) | v13 >> 8;
		v8 += v13;
		v7 ^= v8;
		v7 = v7 << (32 - 7) | v7 >> 7;
		v3 += m10;
		v3 += v4;
		v14 ^= v3;
		v14 = v14 << (32 - 8) | v14 >> 8;
		v9 += v14;
		v4 ^= v9;
		v4 = v4 << (32 - 7) | v4 >> 7;
		v1 += m4;
		v1 += v6;
		v12 ^= v1;
		v12 = v12 << (32 - 8) | v12 >> 8;
		v11 += v12;
		v6 ^= v11;
		v6 = v6 << (32 - 7) | v6 >> 7;
		v0 += m0;
		v0 += v5;
		v15 ^= v0;
		v15 = v15 << (32 - 8) | v15 >> 8;
		v10 += v15;
		v5 ^= v10;
		v5 = v5 << (32 - 7) | v5 >> 7;

		// Round 9.
		v0 += m6;
		v0 += v4;
		v12 ^= v0;
		v12 = v12 << (32 - 16) | v12 >> 16;
		v8 += v12;
		v4 ^= v8;
		v4 = v4 << (32 - 12) | v4 >> 12;
		v1 += m14;
		v1 += v5;
		v13 ^= v1;
		v13 = v13 << (32 - 16) | v13 >> 16;
		v9 += v13;
		v5 ^= v9;
		v5 = v5 << (32 - 12) | v5 >> 12;
		v2 += m11;
		v2 += v6;
		v14 ^= v2;
		v14 = v14 << (32 - 16) | v14 >> 16;
		v10 += v14;
		v6 ^= v10;
		v6 = v6 << (32 - 12) | v6 >> 12;
		v3 += m0;
		v3 += v7;
		v15 ^= v3;
		v15 = v15 << (32 - 16) | v15 >> 16;
		v11 += v15;
		v7 ^= v11;
		v7 = v7 << (32 - 12) | v7 >> 12;
		v2 += m3;
		v2 += v6;
		v14 ^= v2;
		v14 = v14 << (32 - 8) | v14 >> 8;
		v10 += v14;
		v6 ^= v10;
		v6 = v6 << (32 - 7) | v6 >> 7;
		v3 += m8;
		v3 += v7;
		v15 ^= v3;
		v15 = v15 << (32 - 8) | v15 >> 8;
		v11 += v15;
		v7 ^= v11;
		v7 = v7 << (32 - 7) | v7 >> 7;
		v1 += m9;
		v1 += v5;
		v13 ^= v1;
		v13 = v13 << (32 - 8) | v13 >> 8;
		v9 += v13;
		v5 ^= v9;
		v5 = v5 << (32 - 7) | v5 >> 7;
		v0 += m15;
		v0 += v4;
		v12 ^= v0;
		v12 = v12 << (32 - 8) | v12 >> 8;
		v8 += v12;
		v4 ^= v8;
		v4 = v4 << (32 - 7) | v4 >> 7;
		v0 += m12;
		v0 += v5;
		v15 ^= v0;
		v15 = v15 << (32 - 16) | v15 >> 16;
		v10 += v15;
		v5 ^= v10;
		v5 = v5 << (32 - 12) | v5 >> 12;
		v1 += m13;
		v1 += v6;
		v12 ^= v1;
		v12 = v12 << (32 - 16) | v12 >> 16;
		v11 += v12;
		v6 ^= v11;
		v6 = v6 << (32 - 12) | v6 >> 12;
		v2 += m1;
		v2 += v7;
		v13 ^= v2;
		v13 = v13 << (32 - 16) | v13 >> 16;
		v8 += v13;
		v7 ^= v8;
		v7 = v7 << (32 - 12) | v7 >> 12;
		v3 += m10;
		v3 += v4;
		v14 ^= v3;
		v14 = v14 << (32 - 16) | v14 >> 16;
		v9 += v14;
		v4 ^= v9;
		v4 = v4 << (32 - 12) | v4 >> 12;
		v2 += m4;
		v2 += v7;
		v13 ^= v2;
		v13 = v13 << (32 - 8) | v13 >> 8;
		v8 += v13;
		v7 ^= v8;
		v7 = v7 << (32 - 7) | v7 >> 7;
		v3 += m5;
		v3 += v4;
		v14 ^= v3;
		v14 = v14 << (32 - 8) | v14 >> 8;
		v9 += v14;
		v4 ^= v9;
		v4 = v4 << (32 - 7) | v4 >> 7;
		v1 += m7;
		v1 += v6;
		v12 ^= v1;
		v12 = v12 << (32 - 8) | v12 >> 8;
		v11 += v12;
		v6 ^= v11;
		v6 = v6 << (32 - 7) | v6 >> 7;
		v0 += m2;
		v0 += v5;
		v15 ^= v0;
		v15 = v15 << (32 - 8) | v15 >> 8;
		v10 += v15;
		v5 ^= v10;
		v5 = v5 << (32 - 7) | v5 >> 7;

		// Round 10.
		v0 += m10;
		v0 += v4;
		v12 ^= v0;
		v12 = v12 << (32 - 16) | v12 >> 16;
		v8 += v12;
		v4 ^= v8;
		v4 = v4 << (32 - 12) | v4 >> 12;
		v1 += m8;
		v1 += v5;
		v13 ^= v1;
		v13 = v13 << (32 - 16) | v13 >> 16;
		v9 += v13;
		v5 ^= v9;
		v5 = v5 << (32 - 12) | v5 >> 12;
		v2 += m7;
		v2 += v6;
		v14 ^= v2;
		v14 = v14 << (32 - 16) | v14 >> 16;
		v10 += v14;
		v6 ^= v10;
		v6 = v6 << (32 - 12) | v6 >> 12;
		v3 += m1;
		v3 += v7;
		v15 ^= v3;
		v15 = v15 << (32 - 16) | v15 >> 16;
		v11 += v15;
		v7 ^= v11;
		v7 = v7 << (32 - 12) | v7 >> 12;
		v2 += m6;
		v2 += v6;
		v14 ^= v2;
		v14 = v14 << (32 - 8) | v14 >> 8;
		v10 += v14;
		v6 ^= v10;
		v6 = v6 << (32 - 7) | v6 >> 7;
		v3 += m5;
		v3 += v7;
		v15 ^= v3;
		v15 = v15 << (32 - 8) | v15 >> 8;
		v11 += v15;
		v7 ^= v11;
		v7 = v7 << (32 - 7) | v7 >> 7;
		v1 += m4;
		v1 += v5;
		v13 ^= v1;
		v13 = v13 << (32 - 8) | v13 >> 8;
		v9 += v13;
		v5 ^= v9;
		v5 = v5 << (32 - 7) | v5 >> 7;
		v0 += m2;
		v0 += v4;
		v12 ^= v0;
		v12 = v12 << (32 - 8) | v12 >> 8;
		v8 += v12;
		v4 ^= v8;
		v4 = v4 << (32 - 7) | v4 >> 7;
		v0 += m15;
		v0 += v5;
		v15 ^= v0;
		v15 = v15 << (32 - 16) | v15 >> 16;
		v10 += v15;
		v5 ^= v10;
		v5 = v5 << (32 - 12) | v5 >> 12;
		v1 += m9;
		v1 += v6;
		v12 ^= v1;
		v12 = v12 << (32 - 16) | v12 >> 16;
		v11 += v12;
		v6 ^= v11;
		v6 = v6 << (32 - 12) | v6 >> 12;
		v2 += m3;
		v2 += v7;
		v13 ^= v2;
		v13 = v13 << (32 - 16) | v13 >> 16;
		v8 += v13;
		v7 ^= v8;
		v7 = v7 << (32 - 12) | v7 >> 12;
		v3 += m13;
		v3 += v4;
		v14 ^= v3;
		v14 = v14 << (32 - 16) | v14 >> 16;
		v9 += v14;
		v4 ^= v9;
		v4 = v4 << (32 - 12) | v4 >> 12;
		v2 += m12;
		v2 += v7;
		v13 ^= v2;
		v13 = v13 << (32 - 8) | v13 >> 8;
		v8 += v13;
		v7 ^= v8;
		v7 = v7 << (32 - 7) | v7 >> 7;
		v3 += m0;
		v3 += v4;
		v14 ^= v3;
		v14 = v14 << (32 - 8) | v14 >> 8;
		v9 += v14;
		v4 ^= v9;
		v4 = v4 << (32 - 7) | v4 >> 7;
		v1 += m14;
		v1 += v6;
		v12 ^= v1;
		v12 = v12 << (32 - 8) | v12 >> 8;
		v11 += v12;
		v6 ^= v11;
		v6 = (v6 << (32 - 7)) | (v6 >> 7);
		v0 += m11;
		v0 += v5;
		v15 ^= v0;
		v15 = (v15 << (32 - 8)) | (v15 >> 8);
		v10 += v15;
		v5 ^= v10;
		v5 = (v5 << (32 - 7)) | (v5 >> 7);
		//*/
		//Finalization
		S->H[0] ^= v0 ^ v8;
		S->H[1] ^= v1 ^ v9;
		S->H[2] ^= v2 ^ v10;
		S->H[3] ^= v3 ^ v11;
		S->H[4] ^= v4 ^ v12;
		S->H[5] ^= v5 ^ v13;
		S->H[6] ^= v6 ^ v14;
		S->H[7] ^= v7 ^ v15;
	}
}


